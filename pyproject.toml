[project]
name = "gptsovits"
description = "Add your description here"
version = "0.1.0"
# dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "cn2an>=0.5.23",
    "fast-langdetect>=0.3.2",
    "gradio>=5.31.0",
    "jieba>=0.42.1",
    "jieba-fast>=0.53",
    "librosa>=0.11.0",
    "matplotlib>=3.10.3",
    "numba>=0.61.2",
    "pylightkit",
    "pypinyin>=0.54.0",
    "scipy>=1.15.3",
    "split-lang>=2.1.0",
    "tqdm>=4.67.1",
    "torch>=2.7.0 ; sys_platform == 'linux'",
    "torchaudio>=2.7.0; sys_platform == 'linux'",
    "pytorch-lightning>=2.5.1.post0; sys_platform == 'linux'",
    "peft>=0.15.2; sys_platform == 'linux'",
    "x-transformers>=2.3.5; sys_platform == 'linux'",
    # # for mac x86_64, only torch <=2.2.2 supproted
    # "torch ; sys_platform == 'darwin'",
    # "torchaudio; sys_platform == 'darwin'",
    # "pytorch-lightning; sys_platform == 'darwin'",
    # "peft; sys_platform == 'darwin'",
    # "x-transformers; sys_platform == 'darwin'",
    "onnxruntime>=1.22.0",
    "opencc>=1.1.9",
    "ffmpeg-python>=0.2.0",
    "rotary-embedding-torch>=0.8.6",
    "funasr>=1.2.6",
]

[tool.uv.sources]
pylightkit = { workspace = true}

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
extend-exclude = ["webui.py", "tools", "src", "api*py"]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[build-system]
# requires = ["hatchling", "uv-dynamic-versioning"]
# build-backend = "hatchling.build"
requires = ["uv_build>=0.7.8,<0.8.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "ipdb>=0.13.13",
    "pytest>=8.3.5",
    "ruff>=0.11.11",
]

# [tool.setuptools_scm]
# root = "../.." # location of .git
